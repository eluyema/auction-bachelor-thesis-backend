// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccessLevel {
  REGULAR
  MANAGER
  ADMIN
}

enum AuctionType {
  DEFAULT
  NON_PRICE_CRITERIA
  ESCO
}

model User {
  id           String      @id @default(uuid())
  email        String      @unique
  name         String
  passwordHash String
  accessLevel  AccessLevel @default(REGULAR)
  refreshToken String?
  Auction      Auction[]
  Bid          Bid[]
  Pseudonym    Pseudonym[]
}

model Auction {
  id                 String      @id @default(uuid())
  auctionType        AuctionType @default(DEFAULT)
  name               String
  purchaseCode       String
  customerName       String
  expectedCost       BigInt
  decreaseStep       BigInt
  auctionStartAt     DateTime
  firstRoundStartAt  DateTime
  timeForRoundInSecs BigInt
  Author             User        @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId           String
  Rounds             Round[]
  Pseudonym          Pseudonym[]
}

model Round {
  id             String  @id @default(uuid())
  sequenceNumber Int
  Auction        Auction @relation(fields: [auctionId], references: [id])
  auctionId      String
  Bids           Bid[]
}

model Bid {
  id             String    @id @default(uuid())
  Round          Round     @relation(fields: [roundId], references: [id])
  roundId        String
  sequenceNumber Int
  total          BigInt?
  adjustedPrice  BigInt?
  coefficient    Float?
  years          Int?
  days           Int?
  percent        Float?
  User           User      @relation(fields: [userId], references: [id])
  userId         String
  totalUpdatedAt DateTime?
  startAt        DateTime
  endAt          DateTime
}

model Pseudonym {
  userId    String
  auctionId String
  value     String
  User      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  Auction   Auction @relation(fields: [auctionId], references: [id], onDelete: Cascade)

  @@id([userId, auctionId])
}
