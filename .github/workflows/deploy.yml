name: Publish to server

on:
    pull_request:
        branches: ['master']
    push:
        branches: ['master']

jobs:
    push_to_registry:
        name: Push Docker image to Docker Hub
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repo
              uses: actions/checkout@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
              with:
                  images: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
                  tags: latest
                  labels: latest

            - name: Build and push Docker image
              uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  secrets: |
                      DATABASE_URL=${{ secrets.DATABASE_URL }} |
                      TOKEN_SECRET=${{ secrets.TOKEN_SECRET }} |
                      TOKEN_EXPIRES_IN=${{ secrets.TOKEN_EXPIRES_IN }}

    server_update:
        needs: push_to_registry
        name: Update server by ssh
        runs-on: ubuntu-latest
        steps:
            - name: Connect and run script
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SERVER_HOST }}
                  port: ${{ secrets.SERVER_PORT }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  script_stop: true
                  script: docker pull hdanylo/auction-backend && docker run -p 3000:3000 -e DATABASE_URL="${{ secrets.DATABASE_URL }}" -e TOKEN_SECRET="${{ secrets.TOKEN_SECRET }}" -e TOKEN_EXPIRES_IN="${{ secrets.TOKEN_EXPIRES_IN }}" hdanylo/auction-backend
